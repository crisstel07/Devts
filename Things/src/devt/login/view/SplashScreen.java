package devt.login.view;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class SplashScreen extends javax.swing.JFrame {

    /**
     * Creates new form SplashScreen
     */
    public SplashScreen() {

        initComponents();

        setLocationRelativeTo(null);
        setSize(1365, 767);
        setResizable(false);
        
        Loading.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Loading = new javax.swing.JProgressBar();
        lblLoading6 = new javax.swing.JLabel();
        lblLoading4 = new javax.swing.JLabel();
        lblLoading5 = new javax.swing.JLabel();
        lblLoading3 = new javax.swing.JLabel();
        lblLoading2 = new javax.swing.JLabel();
        lblLoading1 = new javax.swing.JLabel();
        lblLoading = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setSize(new java.awt.Dimension(1365, 757));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(Loading, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 340, 190, 10));

        lblLoading6.setFont(new java.awt.Font("SF Pixelate", 0, 14)); // NOI18N
        lblLoading6.setForeground(new java.awt.Color(112, 62, 70));
        lblLoading6.setText("Ingresando al velo...");
        getContentPane().add(lblLoading6, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 530, 200, 20));

        lblLoading4.setFont(new java.awt.Font("SF Pixelate", 0, 16)); // NOI18N
        lblLoading4.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading4.setText("   ");
        getContentPane().add(lblLoading4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 250, 200, 20));

        lblLoading5.setFont(new java.awt.Font("SF Pixelate", 0, 16)); // NOI18N
        lblLoading5.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading5.setText("   ");
        getContentPane().add(lblLoading5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 270, 200, 20));

        lblLoading3.setFont(new java.awt.Font("SF Pixelate", 0, 16)); // NOI18N
        lblLoading3.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading3.setText("   ");
        getContentPane().add(lblLoading3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 210, 200, 20));

        lblLoading2.setFont(new java.awt.Font("SF Pixelate", 0, 16)); // NOI18N
        lblLoading2.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading2.setText("   ");
        getContentPane().add(lblLoading2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 230, 200, 20));

        lblLoading1.setFont(new java.awt.Font("SF Pixelate", 0, 16)); // NOI18N
        lblLoading1.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading1.setText("   ");
        getContentPane().add(lblLoading1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 190, 200, 20));

        lblLoading.setFont(new java.awt.Font("SF Pixelate", 0, 14)); // NOI18N
        lblLoading.setForeground(new java.awt.Color(84, 124, 118));
        lblLoading.setText("   ");
        getContentPane().add(lblLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 180, 200, 20));

        jLabel1.setFont(new java.awt.Font("SF Pixelate", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(84, 124, 118));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main/backup-1750475593.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setPreferredSize(new java.awt.Dimension(1365, 767));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 767));

        pack();
    }// </editor-fold>//GEN-END:initComponents


     public void startSplash(Runnable onFinishCallback) {
        // Asegurarse de que esta instancia sea visible
        this.setVisible(true);
        // Asegurarse de que la barra de progreso sea visible durante la animación
        Loading.setVisible(true); 

        new Thread(() -> {
            try {
                for (int i = 0; i <= 100; i++) { 
                    Thread.sleep(100); // Pausa de 100ms para la animación

                    // Todas las actualizaciones de la UI deben hacerse en el Event Dispatch Thread (EDT)
                    final int progress = i; // Necesario para usar 'i' dentro del lambda
                    SwingUtilities.invokeLater(() -> {
                        Loading.setValue(progress);
                        Loading.setToolTipText(progress + "%"); 

                        // Actualizar etiquetas de texto según el progreso
                        if (progress == 0) {
                            lblLoading.setText(" ");
                            lblLoading1.setText("Tu presencia ha");
                            lblLoading3.setText("sido notificada");
                            lblLoading2.setText("a las criaturas.");
                            lblLoading4.setText("Aún estás a tiempo ");
                            lblLoading5.setText("de retroceder.");
                        } else if (progress == 10) {
                            lblLoading6.setText(" ");
                        } else if (progress == 20) {
                            lblLoading6.setText("Ingresando al velo...");
                        } else if (progress == 25) {
                            lblLoading.setText(" ");
                            lblLoading1.setText("Este boleto no");
                            lblLoading3.setText("garantiza retorno.");
                            lblLoading2.setText("Ninguno lo hace, ");
                            lblLoading4.setText("en realidad.");
                            lblLoading5.setText(" ");
                        } else if (progress == 30) {
                            lblLoading6.setText(" ");
                        } else if (progress == 40) {
                            lblLoading6.setText("Ingresando al velo...");
                        } else if (progress == 50) {
                            lblLoading.setText(" ");
                            lblLoading1.setText("No abras la puerta");
                            lblLoading3.setText("si oyes que alguien");
                            lblLoading2.setText("llama. Aunque use");
                            lblLoading4.setText("tu nombre.");
                            lblLoading5.setText(" ");
                            lblLoading6.setText(" ");
                        } else if (progress == 60) {
                            lblLoading6.setText("Ingresando al velo...");
                        } else if (progress == 70) {
                            lblLoading6.setText(" ");
                        } else if (progress == 75) {
                            lblLoading.setText(" ");
                            lblLoading1.setText("El vagón asignado");
                            lblLoading3.setText("te recuerda...");
                            lblLoading2.setText("pero no con afecto.");
                            lblLoading4.setText("");
                            lblLoading5.setText(" ");
                        } else if (progress == 80) {
                            lblLoading6.setText("Ingresando al velo...");
                        } else if (progress == 90) {
                            lblLoading6.setText(" ");
                        }
                    });
                }
            } catch (Exception e) {
                // Mostrar el mensaje de error en el EDT
                SwingUtilities.invokeLater(() -> JOptionPane.showMessageDialog(null, e.getMessage()));
            } finally {
                // Asegurarse de que dispose() y el callback se ejecuten en el EDT
                SwingUtilities.invokeLater(() -> {
                    dispose(); // Cierra esta ventana de SplashScreen
                    if (onFinishCallback != null) {
                        onFinishCallback.run(); // Ejecuta el callback proporcionado
                    }
                });
            }
        }).start(); // Inicia el hilo de la animación
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Loading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoading1;
    private javax.swing.JLabel lblLoading2;
    private javax.swing.JLabel lblLoading3;
    private javax.swing.JLabel lblLoading4;
    private javax.swing.JLabel lblLoading5;
    private javax.swing.JLabel lblLoading6;
    // End of variables declaration//GEN-END:variables

}
